# 
msgid ""
msgstr ""
"Project-Id-Version: Understanding JSON Schema 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-05-09 06:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/reference/object.rst:7 ../../source/reference/object.rst:1
#: ../../source/reference/object.rst:70 ../../source/reference/object.rst:178
#: ../../source/reference/object.rst:232 ../../source/reference/object.rst:262
#: ../../source/reference/object.rst:431
msgid "object"
msgstr ""

#: ../../source/reference/object.rst:9
msgid ""
"Objects are the mapping type in JSON.  They map \"keys\" to \"values\". In "
"JSON, the \"keys\" must always be strings.  Each of these pairs is "
"conventionally referred to as a \"property\"."
msgstr ""

#: ../../source/reference/object.rst:76
msgid "Properties"
msgstr ""

#: ../../source/reference/object.rst:78
msgid ""
"The properties (key-value pairs) on an object are defined using the "
"``properties`` keyword.  The value of ``properties`` is an object, where "
"each key is the name of a property and each value is a JSON schema used to "
"validate that property."
msgstr ""

#: ../../source/reference/object.rst:83
msgid ""
"For example, let's say we want to define a simple schema for an address made"
" up of a number, street name and street type:"
msgstr ""

#: ../../source/reference/object.rst:115
msgid ""
"The ``additionalProperties`` keyword is used to control the handling of "
"extra stuff, that is, properties whose names are not listed in the "
"``properties`` keyword.  By default any additional properties are allowed."
msgstr ""

#: ../../source/reference/object.rst:120
msgid ""
"The ``additionalProperties`` keyword may be either a boolean or an object.  "
"If ``additionalProperties`` is a boolean and set to ``false``, no additional"
" properties will be allowed."
msgstr ""

#: ../../source/reference/object.rst:124
msgid ""
"Reusing the example above, but this time setting ``additionalProperties`` to"
" ``false``."
msgstr ""

#: ../../source/reference/object.rst:147
msgid ""
"If ``additionalProperties`` is an object, that object is a schema that will "
"be used to validate any additional properties not listed in ``properties``."
msgstr ""

#: ../../source/reference/object.rst:150
msgid ""
"For example, one can allow additional properties, but only if they are each "
"a string:"
msgstr ""

#: ../../source/reference/object.rst:185
msgid "Required Properties"
msgstr ""

#: ../../source/reference/object.rst:187
msgid ""
"By default, the properties defined by the ``properties`` keyword are not "
"required.  However, one can provide a list of required properties using the "
"``required`` keyword."
msgstr ""

#: ../../source/reference/object.rst:191
msgid ""
"The ``required`` keyword takes an array of one or more strings.  Each of "
"these strings must be unique."
msgstr ""

#: ../../source/reference/object.rst:194
msgid ""
"In the following example schema defining a user record, we require that each"
" user has a name and e-mail address, but we don't mind if they don't provide"
" their address or telephone number:"
msgstr ""

#: ../../source/reference/object.rst:238
msgid "Size"
msgstr ""

#: ../../source/reference/object.rst:240
msgid ""
"The number of properties on an object can be restricted using the "
"``minProperties`` and ``maxProperties`` keywords.  Each of these must be a "
"non-negative integer."
msgstr ""

#: ../../source/reference/object.rst:268
msgid "Dependencies"
msgstr ""

#: ../../source/reference/object.rst:271
msgid "This is an advanced feature of JSON Schema.  Windy road ahead."
msgstr ""

#: ../../source/reference/object.rst:273
msgid ""
"The ``dependencies`` keyword allows the schema of the object to change based"
" on the presence of certain special properties."
msgstr ""

#: ../../source/reference/object.rst:276
msgid "There are two forms of dependencies in JSON Schema:"
msgstr ""

#: ../../source/reference/object.rst:278
msgid ""
"**Property dependencies** declare that certain other properties must be "
"present if a given property is present."
msgstr ""

#: ../../source/reference/object.rst:281
msgid ""
"**Schema dependencies** declare that the schema changes when a given "
"property is present."
msgstr ""

#: ../../source/reference/object.rst:285
msgid "Property dependencies"
msgstr ""

#: ../../source/reference/object.rst:287
msgid ""
"Let's start with the simpler case of property dependencies.  For example, "
"suppose we have a schema representing a customer.  If you have their credit "
"card number, you also want to ensure you have a billing address.  If you "
"don't have their credit card number, a billing address would not be "
"required.  We represent this dependency of one property on another using the"
" ``dependencies`` keyword. The value of the ``dependencies`` keyword is an "
"object.  Each entry in the object maps from the name of a property, *p*, to "
"an array of strings listing properties that are required whenever *p* is "
"present."
msgstr ""

#: ../../source/reference/object.rst:297
msgid ""
"In the following example, whenever a ``credit_card`` property is provided, a"
" ``billing_address`` property must also be present:"
msgstr ""

#: ../../source/reference/object.rst:343
msgid ""
"To fix the last issue above (that dependencies are not bidirectional), you "
"can, of course, define the bidirectional dependencies explicitly:"
msgstr ""

#: ../../source/reference/object.rst:380
msgid "Schema dependencies"
msgstr ""

#: ../../source/reference/object.rst:382
msgid ""
"Schema dependencies work like property dependencies, but instead of just "
"specifying other required properties, they can extend the schema to have "
"other constraints."
msgstr ""

#: ../../source/reference/object.rst:386
msgid "For example, here is another way to write the above:"
msgstr ""

#: ../../source/reference/object.rst:438
msgid "Pattern Properties"
msgstr ""

#: ../../source/reference/object.rst:440
msgid ""
"As we saw above, ``additionalProperties`` can restrict the object so that it"
" either has no additional properties that weren't explicitly listed, or it "
"can specify a schema for any additional properties on the object.  Sometimes"
" that isn't enough, and you may want to restrict the names of the extra "
"properties, or you may want to say that, given a particular kind of name, "
"the value should match a particular schema. That's where "
"``patternProperties`` comes in: it is a new keyword that maps from regular "
"expressions to schemas.  If an additional property matches a given regular "
"expression, it must also validate against the corresponding schema."
msgstr ""

#: ../../source/reference/object.rst:452
msgid ""
"When defining the regular expressions, it's important to note that the "
"expression may match anywhere within the property name.  For example, the "
"regular expression ``\"p\"`` will match any property name with a ``p`` in "
"it, such as ``\"apple\"``, not just a property whose name is simply "
"``\"p\"``.  It's therefore usually less confusing to surround the regular "
"expression in ``^...$``, for example, ``\"^p$\"``."
msgstr ""

#: ../../source/reference/object.rst:460
msgid ""
"In this example, any additional properties whose names start with the prefix"
" ``S_`` must be strings, and any with the prefix ``I_`` must be integers.  "
"Any properties explicitly defined in the ``properties`` keyword are also "
"accepted, and any additional properties that do not match either regular "
"expression are forbidden."
msgstr ""

#: ../../source/reference/object.rst:488
msgid ""
"``patternProperties`` can be used in conjunction with "
"``additionalProperties``.  In that case, ``additionalProperties`` will refer"
" to any properties that are not explicitly listed in ``properties`` and "
"don't match any of the ``patternProperties``.  In the following example, "
"based on above, we add a ``\"builtin\"`` property, which must be a number, "
"and declare that all additional properties (that are neither built-in or "
"matched by ``patternProperties``) must be strings:"
msgstr ""

#: ../../source/reference/object.rst:70 ../../source/reference/object.rst:70
msgid "properties"
msgstr ""

#: ../../source/reference/object.rst:70
msgid "additionalProperties"
msgstr ""

#: ../../source/reference/object.rst:178
msgid "required properties"
msgstr ""

#: ../../source/reference/object.rst:178
msgid "required"
msgstr ""

#: ../../source/reference/object.rst:232
msgid "size"
msgstr ""

#: ../../source/reference/object.rst:232
msgid "minProperties"
msgstr ""

#: ../../source/reference/object.rst:232
msgid "maxProperties"
msgstr ""

#: ../../source/reference/object.rst:262 ../../source/reference/object.rst:262
msgid "dependencies"
msgstr ""

#: ../../source/reference/object.rst:431
msgid "regular expression"
msgstr ""

#: ../../source/reference/object.rst:431
msgid "patternProperties"
msgstr ""
